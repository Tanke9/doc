git log --oneline     (Te muestra el id commit y el titulo del commit)
git log --decorate     (Te muestra donde se encuentra el head point en el log)
git log --stat        (Explica el numero de lineas que se cambiaron brevemente)
git log -p            (Explica el numero de lineas que se cambiaron y te muestra que se cambio en el contenido)
git shortlog        (Indica que commits a realizado un usuario, mostrando el usuario y el titulo de sus commits)
git log --graph --oneline --decorate
git log pretty=format:"%cn hizo un commit %h el dia %cd" (Muestar mensajes perzonalizados de los commits)
git log -3            (Limitamos el numero de commits)
git log --after="2016-1-2"
git log --after="today"
git log --after="2016-1-2" --before="today" (Commits para localizar por fechas)
git log --author="Santiago Iván" (commits por autor que cumplan con las letras)
git log --grep="FOOTER" (Busca los commits que cumplan tal cual esta escrito entre las comillas)
git log --grep="FOOTER" -i (Busca los commits que cumplan sin importar mayusculas o minusculas)
git log -- index.html (Busca los commits en un archivo en especifico)
git log -S"Por contenido" (Buscar los commits con el contenido dentro del archivo)


con este comando añadimos un alias superlog que muestra un log tuneado

git config --global alias.superlog "log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all"


git superlog
