#si escriben en google #ffffff les aparece una paleta de colores,
donde les muestra el codigo hexagecimal del color que quieren.

Un atajo para inspeccionar: f12 o f11, en funcion del navegador

Javascript

Lo mas optimo sería no quitar los decimales porque los pesos son tipos de datos flotante,
por lo que la mejor solución sería  convertir a solo 2 decimales para hacerlo mas entendible

peso_final.toFixed(2)

var: palabra reservada para definir una variable, la cual:

Es sensible a mayúsculas/minúsculas
Debe comenzar con una letra
No debe contener caracteres especiales salvo los guiones - _
El salto de linea se indica con una diagonal inversa \ + la letra n, es decir \n. /n lo toma como texto sencillo.

Concatenar es unir cadenas de texto o variables. En JS se usa el operador + para realizar dicha acción.

)Detectar la tecla presionada con el evento keydown:

document.addEventListener('keydown',nombreFunción);

CamelCase es un estilo de escritura que se aplica a frases o palabras compuestas. El nombre se debe a que las mayúsculas a lo largo de una palabra en CamelCase se asemejan a las jorobas de un camello. El nombre CamelCase se podría traducir como Mayúsculas/Minúsculas Camello. El término case se traduce como "caja tipográfica", que a su vez implica si una letra es mayúscula o minúscula y tiene su origen en la disposición de los tipos móviles en casilleros o cajas.

Existen dos tipos de CamelCase:

UpperCamelCase, cuando la primera letra de cada una de las palabras es mayúscula. Ejemplo: EjemploDeUpperCamelCase.
lowerCamelCase, igual que la anterior con la excepción de que la primera letra es minúscula. Ejemplo: ejemploDeLowerCamelCase.


Fuente: https://es.wikipedia.org/wiki/CamelCase

Atajo de teclado para abrir la consola en el navegador:

ctrl+Shift+i

Recargar el navegador:
Ctrl+r
Código de teclas para las flechas:

// Flecha Izquierda: KeyCode= 37
// Flecha Arriba: KeyCode= 38
// Flecha Derecha: KeyCode= 39
// Flecha Abajo: KeyCode= 40


Objeto para almacenar el valor numérico de las teclas: JSON (Javascript Objet Notation)

var teclas = {
UP:38,   // Clave-Valor
DOWN:40,  //Clave-Valor
LEFT:37,  // Clave-Valor


RIGTH:39  // el último elemento no lleva coma.
}
Estas líneas serían lo mismo que esto:

var teclas = {UP:38,DOWN:40,LEFT:37,RIGTH:39} //Por eso el último elemento no lleva coma.

Estructura de control switch: (se utiliza en casos especiales porque no es muy legible el código)

switch(tecla.keyCode) {
  case teclas.UP:console.log('arriba switch');
  break;
  case teclas.DOWN:console.log('abajo switch');
  break;
  case teclas.RIGTH:console.log('derecha switch');
  break;
  case teclas.LEFT:console.log('izquierda switch');
  break;
  default: console.log('¿Para dibujar utiliza las flechas del teclado?');// en caso que la tecla  oprimida no sea una flecha
  breack; // el último breack no es necesario porque finaliza el bloque de código.
}

document.addEventListener("mousedown",presionarMouse);  //cuando presionas click
document.addEventListener("mouseup",soltarMouse);       //cuando sueltas click
document.addEventListener("mousemove",dibujarMouse);    //cuando mueves el mouse

// dibujo del borde
dibujarLinea("red", 0, 0, 300, 0, papel)
dibujarLinea("red", 300, 0, 300, 300, papel)
dibujarLinea("red", 300, 300, 0, 300, papel)
dibujarLinea("red", 0, 300, 0, 0, papel)

// Funcion para mousemove
function dibujarMouse(evento){
  if (estado == 1) {   // solo se dibujara si esta el click del mouse presionado
    dibujarLinea(colorLinea, x, y, evento.layerX, evento.layerY, papel);
  }
  x = evento.layerX;
  y = evento.layerY;
}

// Funcion para mousedown
function presionarMouse(evento){
  estado = 1;         //click presionado
  x = evento.layerX;
  y = evento.layerY;
}

// Funcion para mouseup
function soltarMouse(evento){
  estado = 0;         // click suelto
  x = evento.layerX;
  y = evento.layerY;
}
function dibujarLinea(color, xinicial, yinicial, xfinal, yfinal, lienzo){
  lienzo.beginPath();                  // Inicia el trazo
  lienzo.strokeStyle = color;          // Estilo de trazo (color)
  lienzo.lineWidth = 2;                // Ancho de la linea
  lienzo.moveTo(xinicial, yinicial);   // Donde comienza la linea
  lienzo.lineTo(xfinal, yfinal);       // Traza la linea (ubica punto final)
  lienzo.stroke();                     // Dibuja con el estio de trazo
  lienzo.closePath();                  // Cierra el dibujo
}
