crear una clave secreta en el index.js

const SECRET = 'fdsakfjsaÃ±d34543534fjksda'

y pasarla en el contexto

app.use(
  '/graphql',
  bodyParser.json(),
  graphqlExpress({
    schema,
    context: {SECRET},
    formatError: (error) =>{
      return {
        codigo: 'a43',
        name: error.name,
        mensaje: error.message
      }
    }
  }))

Ya podemos pasarla en el login (resolver)

login: async(_,args, {SECRET}) => {
   const newLogin = args;
    const newUser= await Usuario.query().where('email',newLogin.email)
    const valid = await bcrypt.compare(newLogin.password, newUser[0].password);
    console.log(valid);
    if (!valid){
       throw new Error (`Password Incorrect `)
    }
     const token = jwt.sign(
       {
       user: lodash.pick(newUser[0], ['id', 'nombre'])
       } ,
       SECRET,  {
        expiresIn: '1y',
      } )
      return token;

}


https://www.youtube.com/watch?v=eu2VJ9dtwiY
